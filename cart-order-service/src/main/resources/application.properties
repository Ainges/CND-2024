%dev.host = "http://localhost"
%dev.port = "8080"

%test.host = "http://localhost"
%test.port = "8080"

%prod.host = ${PROD_HOST}
%prod.port = ${PROD_PORT}

quarkus.log.level=INFO



%dev.quarkus.datasource.devservices.enabled=true
%dev.quarkus.datasource.devservices.port=5432

## Product API
%dev.product-service/mp-rest/url=http://localhost:4000
%dev.product-service/mp-rest/scope=jakarta.inject.Singleton

%prod.product-service/mp-rest/url=${PRODUCT_SERVICE_URL}
%prod.product-service/mp-rest/scope=jakarta.inject.Singleton


## RabbitMQ
# "/" is to publish directly to queue (AMQP default exchange) effectively bypassing the exchange and routing mechanism
%dev.mp.messaging.outgoing./.connector=smallrye-rabbitmq
%dev.mp.messaging.outgoing./.address=pending-orders

rabbitmq-host=localhost
rabbitmq-http-port=15672
rabbitmq-password=guest
rabbitmq-port=5672
rabbitmq-username=guest

# TODO: Add the RabbitMQ configuration for the production environment

# Hardcode this for now...
%prod.mp.messaging.outgoing./.connector=smallrye-rabbitmq
%prod.mp.messaging.outgoing./.address=${RABBITMQ_QUEUE_NAME_PENDING_ORDERS}


%prod.rabbitmq-host=${RABBITMQ_HOST}
%prod.rabbitmq-http-port=${RABBITMQ_HTTP_PORT}
%prod.rabbitmq-password=${RABBITMQ_PASSWORD}
%prod.rabbitmq-port=${RABBITMQ_PORT}
%prod.rabbitmq-username=${RABBITMQ_USERNAME}